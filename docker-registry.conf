  upstream docker-registry {
    server <docker_registry_ip>:<target_port>;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # this doesn't seem to work for meteor
  # fastcgi_buffers 16 16k;
  # fastcgi_buffer_size 32k;
  # proxy_buffering off;

  # but this does work for meteor
  # http://stackoverflow.com/questions/23844761/upstream-sent-too-big-header-while-reading-response-header-from-upstream
  proxy_buffer_size   128k;
  proxy_buffers   4 256k;
  proxy_busy_buffers_size   256k;

  server {
    listen 8080;
    server_name <public_ip>;

    ssl on;
    ssl_certificate /etc/ssl/certs/docker-registry;
    ssl_certificate_key /etc/ssl/private/docker-registry;

    proxy_set_header Host       $http_host;   # required for Docker client sake
    proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP

    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)
    chunked_transfer_encoding on;

    location / {
      # let Nginx know about our auth file
      # auth_basic              "Restricted";
      # auth_basic_user_file    docker-registry.htpasswd;

      proxy_pass http://docker-registry;

      # making nginx work with meteor: http://www.meteorpedia.com/read/nginx
      #
      proxy_set_header X-Real-IP $remote_addr;  # http://wiki.nginx.org/HttpProxyModule
      proxy_set_header Host $host;  # pass the host header - http://wiki.nginx.org/HttpProxyModule#proxy_pass
      proxy_http_version 1.1;  # recommended with keepalive connections - http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version
      # WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      add_header Cache-Control no-cache;
    }
    location /_ping {
      auth_basic off;
      proxy_pass http://docker-registry;
    }
    location /v1/_ping {
      auth_basic off;
      proxy_pass http://docker-registry;
    }
  }
